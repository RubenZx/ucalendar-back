generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ALUMN
  PROFESSOR
  ADMINISTRATOR
}

model User {
  uid            String               @id
  password       String
  name           String?
  lastName       String?
  role           Role                 @default(ALUMN)
  subjects       UserSubject[]
  timetableItems UserTimetableItems[]
}

model Degree {
  id       Int             @id
  name     String
  subjects DegreeSubject[]
}

model Group {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  timeTableItem TimeTableItem[]
}

model ClassRoom {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  timeTableItem TimeTableItem[]
}

model Subject {
  id            Int             @id
  name          String
  abrev         String
  semester      Boolean         @default(true)
  degrees       DegreeSubject[]
  timeTableItem TimeTableItem[]
  user          UserSubject[]
}

model TimeTableItem {
  id           Int                  @id @default(autoincrement())
  startHour    String
  endHour      String
  type         String
  dayOfTheWeek Int
  semester     Boolean              @default(true)
  colorBg      String
  colorAbrev   String
  weeks        Json
  users        UserTimetableItems[]
  classRoom    ClassRoom            @relation(fields: [classRoomId], references: [id])
  classRoomId  Int
  group        Group                @relation(fields: [groupId], references: [id])
  groupId      Int
  subject      Subject              @relation(fields: [subjectId], references: [id])
  subjectId    Int

  @@unique([classRoomId, dayOfTheWeek, startHour, endHour], name: "onlyOneClassRoom")
}

model UserSubject {
  user      User    @relation(fields: [userId], references: [uid])
  userId    String
  subject   Subject @relation(fields: [subjectId], references: [id])
  subjectId Int

  @@id([userId, subjectId])
}

model DegreeSubject {
  degree    Degree  @relation(fields: [degreeId], references: [id])
  degreeId  Int
  subject   Subject @relation(fields: [subjectId], references: [id])
  subjectId Int

  @@id([degreeId, subjectId])
}

model UserTimetableItems {
  user            User          @relation(fields: [userId], references: [uid])
  userId          String
  timeTableItem   TimeTableItem @relation(fields: [timeTableItemId], references: [id])
  timeTableItemId Int

  @@id([userId, timeTableItemId])
}
